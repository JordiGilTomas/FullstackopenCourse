import React, { useState, useEffect } from "react";
import PersonForm from "./PersonForm";
import Filter from "./Filter";
import Persons from "./Persons";
import axios from "axios";
import phoneService from "../services/phones.js";
import Notification from "./Notification";

const App = () => {
  const [persons, setPersons] = useState([]);
  const [newName, setNewName] = useState("");
  const [newNumber, setNumber] = useState("");
  const [newFilter, setFilter] = useState("");
  const [newMessage, setMessage] = useState("");

  useEffect(() => {
    axios
      .get("http://localhost:3001/persons")
      .then((response) => setPersons(response.data));
  }, []);

  const isNotNew = () => {
    return [...persons].find((person) => person.name === newName);
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!newName) return;
    if (
      isNotNew() &&
      window.confirm(
        `${newName} is already added to phonebook, replace the old number with a new one?`
      )
    ) {
      const updatedPerson = persons.filter(
        (person) => person.name === newName
      )[0];

      updatedPerson.number = newNumber;

      setPersons(
        persons.map((person) =>
          person.id !== updatedPerson.id ? person : updatedPerson
        )
      );

      phoneService.update(updatedPerson);

      return;
    } else {
      phoneService
        .create({ name: newName, number: newNumber })
        .then((person) => {
          setMessage(`Added ${person.name}`);
          setTimeout(() => {
            setMessage("");
          }, 3000);
        });
      // getALL for to get the autoID generated by JSON SERVER.
      phoneService.getAll().then((persons) => setPersons(persons));

      setNewName("");
      setNumber("");
    }
  };

  const handlePerson = ({ target }) => {
    setNewName(target.value);
  };

  const handleNumber = ({ target }) => setNumber(target.value);

  const handleSearch = ({ target }) => {
    setFilter(target.value);
  };

  return (
    <div>
      <h2>Phonebook</h2>
      <Notification newMessage={newMessage} />
      <Filter onChange={handleSearch} />
      <h2>Add a new</h2>
      <PersonForm
        handlePerson={handlePerson}
        handleNumber={handleNumber}
        handleSubmit={handleSubmit}
        newName={newName}
        newNumber={newNumber}
      />
      <h2>Numbers</h2>
      <Persons persons={persons} filter={newFilter} setPersons={setPersons} />
      <div>debug: {newName}</div>
    </div>
  );
};

export default App;
